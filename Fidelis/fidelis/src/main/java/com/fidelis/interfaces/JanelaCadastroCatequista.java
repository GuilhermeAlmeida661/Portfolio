/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.fidelis.interfaces;

import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import com.fidelis.entities.Catequista;
import com.fidelis.controllers.Controlador_Cadastro_Catequista;
/**
 *
 * @author Guila
 */
public class JanelaCadastroCatequista extends javax.swing.JFrame {

    Controlador_Cadastro_Catequista controlador_Catequista;
    Catequista[] catequistas_cadastrados;
    Catequista catequista;

    /**
     * Creates new form JanelaCadastroCatequista
     * @param controlador_Catequista
     */
    public JanelaCadastroCatequista(Controlador_Cadastro_Catequista controlador_Catequista) {
        this.controlador_Catequista = controlador_Catequista;
        catequistas_cadastrados = Catequista.getVisao_Catequistas();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings({ "unchecked", "rawtypes"})
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Nome_CatequistaLabel = new javax.swing.JLabel();
        Nome_CatequistaTextField = new javax.swing.JTextField();
        Senha_CatequistaLabel = new javax.swing.JLabel();
        AdministradorLabel = new javax.swing.JLabel();
        É_AdministradorCheckBox = new javax.swing.JCheckBox();
        Inserir_CatequistaButton = new javax.swing.JButton();
        Editar_CatequistaButton = new javax.swing.JButton();
        Consultar_CatequistaButton = new javax.swing.JButton();
        Remover_CatequistaButton = new javax.swing.JButton();
        Senha_CatequistaPasswordField = new javax.swing.JPasswordField();
        catequistas_CadastradosLabel = new javax.swing.JLabel();
        catequistas_CadastradosComboBox = new javax.swing.JComboBox<>();
        LimparCatequistaButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        Nome_CatequistaLabel.setText("Nome do Catequista:");

        Senha_CatequistaLabel.setText("Senha:");

        AdministradorLabel.setText("Administrador");

        É_AdministradorCheckBox.setText("Sim");

        Inserir_CatequistaButton.setText("Inserir");
        Inserir_CatequistaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Inserir_CatequistaButtonActionPerformed(evt);
            }
        });

        Editar_CatequistaButton.setText("Editar");
        Editar_CatequistaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Editar_CatequistaButtonActionPerformed(evt);
            }
        });

        Consultar_CatequistaButton.setText("Consultar");
        Consultar_CatequistaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Consultar_CatequistaButtonActionPerformed(evt);
            }
        });

        Remover_CatequistaButton.setText("Remover");
        Remover_CatequistaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Remover_CatequistaButtonActionPerformed(evt);
            }
        });

        Senha_CatequistaPasswordField.setToolTipText("Ex: 6u1L4*#");

        catequistas_CadastradosLabel.setText("Catequistas Cadastrados:");

        catequistas_CadastradosComboBox.setModel(new DefaultComboBoxModel(catequistas_cadastrados));

        LimparCatequistaButton.setText("Limpar");
        LimparCatequistaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LimparCatequistaButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Inserir_CatequistaButton)
                                .addGap(18, 18, 18)
                                .addComponent(Editar_CatequistaButton)
                                .addGap(18, 18, 18)
                                .addComponent(Consultar_CatequistaButton)
                                .addGap(18, 18, 18)
                                .addComponent(Remover_CatequistaButton)
                                .addGap(18, 18, 18)
                                .addComponent(LimparCatequistaButton))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(catequistas_CadastradosLabel)
                                    .addGap(18, 18, 18)
                                    .addComponent(catequistas_CadastradosComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(Nome_CatequistaLabel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(Nome_CatequistaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(34, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Senha_CatequistaLabel)
                        .addGap(18, 18, 18)
                        .addComponent(Senha_CatequistaPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(AdministradorLabel)
                        .addGap(18, 18, 18)
                        .addComponent(É_AdministradorCheckBox)
                        .addGap(99, 99, 99))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(catequistas_CadastradosLabel)
                    .addComponent(catequistas_CadastradosComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Nome_CatequistaLabel)
                    .addComponent(Nome_CatequistaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(AdministradorLabel)
                        .addComponent(É_AdministradorCheckBox))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Senha_CatequistaLabel)
                        .addComponent(Senha_CatequistaPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Inserir_CatequistaButton)
                    .addComponent(Editar_CatequistaButton)
                    .addComponent(Consultar_CatequistaButton)
                    .addComponent(Remover_CatequistaButton)
                    .addComponent(LimparCatequistaButton))
                .addGap(34, 34, 34))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Inserir_CatequistaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Inserir_CatequistaButtonActionPerformed
        Catequista catequista = obterCatequistaInformado();
        String msg_erro = null;
        if(catequista != null)
           msg_erro = controlador_Catequista.inserirCatequistaCadastrado(catequista);
         else msg_erro = "Algum Atributo do Catequista não foi informado";
        if(msg_erro == null){
           Catequista visao = catequista.getVisao();
           catequistas_CadastradosComboBox.addItem(visao);
           catequistas_CadastradosComboBox.updateUI();
           catequistas_CadastradosComboBox.setSelectedItem(visao);
         } else JOptionPane.showMessageDialog(this, msg_erro ,"ERRO",JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_Inserir_CatequistaButtonActionPerformed

    private void Editar_CatequistaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Editar_CatequistaButtonActionPerformed
        Catequista catequista = obterCatequistaInformado_comId_combobox();
        String msg_erro = null;
        if(catequista != null)
            msg_erro = controlador_Catequista.editarCatequistaCadastrado(catequista);
        else msg_erro = "Algum atributo do Catequista não foi Informado";
        if(msg_erro == null){
           Catequista visao = getVisaoCatequistasCadastrados(catequista.getId(), catequista.getNome());
        if(visao != null && visao.getId() > 0){
            visao.setNome(catequista.getNome());
            catequistas_CadastradosComboBox.updateUI();
            catequistas_CadastradosComboBox.setSelectedItem(visao);
            }
        } 
        else{ JOptionPane.showMessageDialog(this, msg_erro ,"ERRO",JOptionPane.ERROR_MESSAGE); }
    }//GEN-LAST:event_Editar_CatequistaButtonActionPerformed

    private void Consultar_CatequistaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Consultar_CatequistaButtonActionPerformed
        Catequista visao = (Catequista) catequistas_CadastradosComboBox.getSelectedItem();
        Catequista catequista = null;
        String msg_erro = null;
        if(visao != null && visao.getId() > 0){
            catequista = Catequista.consultarCatequista(visao.getId());
            if(catequista == null){
                msg_erro = "Catequista não Cadastrado";
            }
        }else msg_erro = "Nenhum Catequista foi Selecionado";
        if(msg_erro == null && catequista != null){    
                Nome_CatequistaTextField.setText(catequista.getNome());
                Senha_CatequistaPasswordField.setText(catequista.getSenha());
                É_AdministradorCheckBox.setSelected(catequista.isAdmin());
        }else JOptionPane.showMessageDialog(this, msg_erro ,"ERRO",JOptionPane.ERROR_MESSAGE);       
    }//GEN-LAST:event_Consultar_CatequistaButtonActionPerformed

    private void Remover_CatequistaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Remover_CatequistaButtonActionPerformed
        Catequista visao = (Catequista) catequistas_CadastradosComboBox.getSelectedItem();
        String msg_erro = null;
        if(visao != null)
          msg_erro = controlador_Catequista.removerCatequistaCadastrado(visao.getId());
        else msg_erro = "Nenhum Catequista foi Selecionado";
        if(msg_erro == null){
           catequistas_CadastradosComboBox.removeItem(visao);
           if(catequistas_cadastrados.length >= 1){
                catequistas_CadastradosComboBox.setSelectedIndex(0);
                catequistas_CadastradosComboBox.updateUI();
           }else catequistas_CadastradosComboBox.setSelectedIndex(-1);
        } else{
           JOptionPane.showMessageDialog(this, msg_erro ,"ERRO",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_Remover_CatequistaButtonActionPerformed

    private void LimparCatequistaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LimparCatequistaButtonActionPerformed
        Senha_CatequistaPasswordField.setText("");
        Nome_CatequistaTextField.setText("");
        É_AdministradorCheckBox.setSelected(false); 
    }//GEN-LAST:event_LimparCatequistaButtonActionPerformed


    private Catequista getVisaoCatequistasCadastrados(int id_catequista, String nome_catequista){
        for(Catequista visao : catequistas_cadastrados){
           if(visao.getId() == id_catequista && nome_catequista.equals(visao.getNome())){
                return visao;
            }
        } 
        return null;
    }

    // fazer outro método só que capturando o id do combo box para habilitar a edição de dados?
    public Catequista obterCatequistaInformado(){
        Integer id_catequista = catequista.getId();
        if(id_catequista.intValue() == 0) return null;
        String Nome_Catequista = Nome_CatequistaTextField.getText();
        if(Nome_Catequista.isEmpty()) return null;
        @SuppressWarnings("deprecation")
        String Senha_Catequista = Senha_CatequistaPasswordField.getText();
        if(Senha_Catequista.isEmpty()) return null;
        Boolean É_Administrador = É_AdministradorCheckBox.isSelected();
        return new Catequista(id_catequista, Nome_Catequista, Senha_Catequista, É_Administrador);
    }

    public Catequista obterCatequistaInformado_comId_combobox(){
        Catequista catequista = (Catequista) catequistas_CadastradosComboBox.getSelectedItem();
        Integer id_catequista = catequista.getId();
        if(id_catequista.intValue() == 0) return null;
        String Nome_Catequista = Nome_CatequistaTextField.getText();
        if(Nome_Catequista.isEmpty()) return null;
        @SuppressWarnings("deprecation")
        String Senha_Catequista = Senha_CatequistaPasswordField.getText();
        if(Senha_Catequista.isEmpty()) return null;
        Boolean É_Administrador = É_AdministradorCheckBox.isSelected();
        return new Catequista(id_catequista, Nome_Catequista, Senha_Catequista, É_Administrador);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JanelaCadastroCatequista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JanelaCadastroCatequista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JanelaCadastroCatequista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JanelaCadastroCatequista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() { }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AdministradorLabel;
    private javax.swing.JButton Consultar_CatequistaButton;
    private javax.swing.JButton Editar_CatequistaButton;
    private javax.swing.JButton Inserir_CatequistaButton;
    private javax.swing.JButton LimparCatequistaButton;
    private javax.swing.JLabel Nome_CatequistaLabel;
    private javax.swing.JTextField Nome_CatequistaTextField;
    private javax.swing.JButton Remover_CatequistaButton;
    private javax.swing.JLabel Senha_CatequistaLabel;
    private javax.swing.JPasswordField Senha_CatequistaPasswordField;
    private javax.swing.JComboBox<Object> catequistas_CadastradosComboBox;
    private javax.swing.JLabel catequistas_CadastradosLabel;
    private javax.swing.JCheckBox É_AdministradorCheckBox;
    // End of variables declaration//GEN-END:variables
}
